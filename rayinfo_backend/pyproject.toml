[tool.poetry]
name = "rayinfo-backend"
version = "0.1.0"
description = ""
authors = ["Maxiee <maxieewong@gmail.com>"]
readme = "README.md"
packages = [{ include = "rayinfo_backend", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"
fastapi = "^0.116.1"
apscheduler = "^3.11.0"
playwright = "^1.54.0"
uvicorn = { version = "^0.35.0", extras = ["standard"] }
pydantic = "^2.6.0"
pyyaml = "^6.0.0"
sqlalchemy = "^2.0.0"
python-multipart = "^0.0.9"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-asyncio = "^1.1.0"
httpx = "^0.28.1"
ruff = "^0.6.9"
mypy = "^1.11.2"

# -------- 代码规范 / Lint ----------
[tool.ruff]
target-version = "py311"
line-length = 100
lint.select = ["E","F","I","N","UP","B","SIM","PL","RUF"]
lint.ignore = ["E203","W503"]

[tool.ruff.lint.isort]
known-first-party = ["rayinfo_backend"]

# -------- 类型检查（把 mypy 当编译器用） ----------
[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
plugins = []

# -------- PyTest 习惯项 ----------
[tool.pytest.ini_options]
addopts = "-q -ra --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src/rayinfo_backend"]


[tool.poetry.scripts]
# 可选：CLI 入口（如果你有 typer/click 的 CLI）
# rayinfo = "rayinfo_backend.app.cli:app"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
