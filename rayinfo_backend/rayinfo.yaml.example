# ===============================================
# RayInfo 配置文件
# ===============================================
#
# 常用时间间隔参考（单位：秒）
# ---------------------------------------
# 30 秒    = 30
# 1 分钟   = 60
# 2 分钟   = 120
# 3 分钟   = 180
# 5 分钟   = 300
# 10 分钟  = 600
# 15 分钟  = 900
# 20 分钟  = 1200
# 30 分钟  = 1800
# 1 小时   = 3600
# 2 小时   = 7200
# 6 小时   = 21600
# 12 小时  = 43200
# 1 天     = 86400
# 1 周     = 604800
#
# 搜索时间范围参数说明
# ---------------------------------------
# time_range 支持的值：
#   d  - 最近一天的结果    (mes search "关键词" --time d)
#   w  - 最近一周的结果    (mes search "关键词" --time w)  
#   m  - 最近一月的结果    (mes search "关键词" --time m)
#   y  - 最近一年的结果    (mes search "关键词" --time y)
#   不设置 - 不进行时间过滤 (mes search "关键词")
# ===============================================
# 顶层结构
# scheduler:
#   timezone: "Asia/Shanghai"
# search:
#   mes:
#     interval_seconds: 300         # 所有 mes.search 任务默认间隔（秒）
#     engine: duckduckgo            # 默认搜索引擎（可预留 future: auto, google, bing）
#     queries:                      # 要调度的查询关键词列表（每个关键词一个独立任务）
#       - "机器学习"
#       - "人工智能 新闻"
#     per_query:                    # 可选：对单个 query 覆盖 interval 或 engine
#       - query: "机器学习"
#         interval_seconds: 180
#       - query: "人工智能 新闻"
#         interval_seconds: 600

scheduler:
  timezone: "UTC"

# 数据存储配置
storage:
  db_path: "./data/rayinfo.db" # SQLite 数据库文件路径
  batch_size: 100 # 批量处理大小
  enable_wal: true # 启用 WAL 模式（提升并发性能）

# 新配置：search_engine 为一个数组，每个元素代表一个独立的搜索任务
# 字段：
#   query (str, 必填)            查询关键词
#   interval_seconds (int, 必填) 执行间隔秒
#   engine (str, 可选)           搜索引擎（默认 duckduckgo）
#   time_range (str, 可选)       时间范围过滤（d=天, w=周, m=月, y=年, 默认不过滤）
search_engine:
  - query: "机器学习"
    interval_seconds: 180
    engine: duckduckgo
    time_range: d  # 最近一天的结果
  - query: "人工智能 新闻"
    interval_seconds: 600
    engine: duckduckgo
    time_range: w  # 最近一周的结果
  - query: "深度学习论文"
    interval_seconds: 1800
    engine: duckduckgo
    time_range: m  # 最近一月的结果
